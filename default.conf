########
#VIEWER#
########

# Display two pages at once
doublePageMode = false

# Only advance a single page when switching to the next page in double page mode
doublePageModeSingleStep = false

# Read from right to left
# Switches the left and right pages in double page mode
# Changes the direction of smart scrolling to right-to-left
mangaMode = false

# Do not show the first page as a double page, even if double page mode is active
doNotShowFirstPageAsDouble = true

# Do not show wide pages (width > height) as double pages
doNotShowWidePageAsDouble = true

# Background color of the main view
# Either a color name or dynamic
# Setting this to dynamic means that a suitable background color will be detected from the page edge pixels,
# however this is slower than just setting a static color
#mainViewBackground = dynamic
mainViewBackground = #545454

# This will make dynamic background color detection faster but less accurate
fasterDynamicBackgroundDetection = false

# Default image resizing mode
# Possible values:
# height: fit to window height
# width: fit to window width
# best: best of height or width
# original-size: always show as original size
# zoom: manual zoom mode
# fixed-size: always scale to a predefined fixed size (while keeping aspect ratio)
fitMode = best

# Width and height for the fixed-size fitting mode
fixedSizeWidth = 800
fixedSizeHeight = 1200

# Use high quality interpolation when transforming (e.g. scaling) images
# Slower, but gives better looking results
hqTransformMode = true

# Stretch images that are smaller than the window size
stretchSmallImages = false

# Keep transformation (zoom, rotation, flip, etc.) on switching pages
keepTransformationOnPageSwitch = false

# Use a checkered background for transparent images
checkeredBackgroundForTransparency = false

# Size of the squares of the checkerboard pattern (see option above)
checkerBoardPatternSize = 10

# Allow dragging the image arbitrarily, even outside screen bounds
# Note: this is an advanced feature and can conflict with scrolling and transformation behavior
allowFreeDrag = false

# Display a warning when enabling free dragging mode
freeDragWarning = true

# Reciprocal magnification factor of the magnifying lens (e.g. 0.5 means 2x magnification)
magnificationFactor = 0.5

# Size of the magnifying lens
magnifyingLensSize = 200

# Should the magnifying lens use slower, but higher quality scaling
magnifyingLensHQScaling = true

##########################
#SCROLLING AND NAVIGATION#
##########################

# If smart scroll is enabled, scrolling down will not only scroll along the vertical direction, but instead will traverse the image
# from left to right, then from up to down (or if manga mode is active, from right to left, then from up to down)
# Scrolling up will do the same but in the reverse direction
smartScroll = true

# Scroll vertically first in smart scroll mode,
# meaning it will traverse the image in vertical strips from left to right (or right to left in manga mode)
smartScrollVerticalFirst = false

# Switch pages by repeatedly scrolling when at the end (or beginning) of a page
flipPagesByScrolling = true

# How many additional scroll events are needed to switch pages when the end (beginning) was already reached
stepsBeforePageFlip = 1

# Adaptive scrolling sets the scroll step based on the visible size of the image
# It scrolls the image by (1.0 - adaptiveScrollOverhang) * visibleRegionWidth in the horizontal direction,
# and (1.0 - adaptiveScrollOverhang) * visibleRegionHeight in the vertical direction
adaptiveScrollOverhang = 0.2
useAdaptiveArrowKeyScroll = true
useAdaptiveWheelScroll = true
useAdaptiveSpaceScroll = true
useAdaptiveSlideShowScroll = true

# If adaptive scrolling is not enabled, scroll by these pixel/fractional values
arrowKeyScrollPixels = 50
wheelScrollPixels = 50
spaceScrollFraction = 0.5
slideShowScrollPixels = 200

# Open the next comic automatically when switching to the next page while on the last page
autoOpenNextComic = false

# Should the slideshow open the next comic automatically
slideShowAutoOpenNextComic = true

# Default interval between slideshow steps (not necessarly page switches, can be scrolling too if the page doesn't fit on the screen)
slideShowInterval = 5

################
#USER INTERFACE#
################

# Theme
# Set to system if you want to use the system theme
# Set to an absolute filepath pointing to a CSS file if you want to load that file
theme = default

startFullscreen = false

startMaximized = true

# Show or hide different parts of the UI on startup
showMenubar = true
showToolbar = true
showSidePanel = true
showStatusbar = false

# Statusbar text template
# The following placeholders can be used:
# %CURRPAGE%: will be replaced with the current page number (or 0)
# %PAGECOUNT%: will be replaced with the number of pages in the comic (or 0)
# %FILENAME%: will be replaced with the comic filename
# %FILEPATH%: will be replaced with the full comic filename with path
# %FITMODE%: will be replaced with the current fit mode
# %TITLE%: will be replaced with the title of the comic
# %DIMENSIONS%: will be replaced with the original dimensions of the current page (or 0x0)
# %IMGFILENAME%: will be replaced with the filename of the current page image
# %ZOOMPERCENT%: will be replacted with the current zoom percentage
# %IMGMIMETYPE%: will be replaced by the mime type of the current page image
# %IMGFILESIZE%: will be replacted by the file size of the current page image
# %CURRPAGE2%, %DIMENSIONS2%, %IMGFILENAME2%, %ZOOMPERCENT2%, %IMGMIMETYPE2%, %IMGFILESIZE2%: these are the same as the variants without the "2",
#   except that in double page mode these will show data for both page images
statusbarTemplate = %CURRPAGE2%/%PAGECOUNT% | %FITMODE% | %DIMENSIONS2% (%ZOOMPERCENT2%) | %TITLE%

# Margin of the statusbar label (in pixels)
statusbarLabelMargin = 1

# Starting width of the side panel
# See also the next option
sidePanelWidth = 200

# Ignore the previous option and set a width automatically that
# fits the thumbnails exactly.
# This automatic width will be set as the minimum width too
thumbnailSidebarAutomaticWidth = true

# Controls whether to show page number and comic title in the window title
useComicNameAsWindowTitle = true

# Controls whether to use the first/current page of the comic as window icon
useFirstPageAsWindowIcon = true
useCurrentPageAsWindowIcon = false

# If set to false, scrollbars will never be shown around the image
showScrollbars = true

# If set to false (but showScrollbars is true), then scrollbars around the image will only be shown when needed
# If set to true and showScrollbars is also true, then scrollbars around the image will always be visible
alwaysShowScrollbars = false

# The path to read toolbar and menu icons from. Set to 'default' to use the default icons
# It looks for either iconname.svg or iconname.png where iconname is one of the following:
# fit-original-size, fit-best, fit-manual-zoom, fit-width, fit-height, fit-fixed-size,
# prev-archive, next-archive, prev-page, next-page, first-page, last-page, go-to-page
# If an icon is not found, it falls back to the default
iconPath = default

###############
#MISCELLANEOUS#
###############

# Enable esc as an emergency exit key.
quitOnEscape = true

# Enable to ask if you're sure before exiting the program.
# This won't affect the emergency exit feature.
confirmQuit = false

#########
#HISTORY#
#########

# Whether to store recently opened files
storeRecentFiles = true

# How many entries in the recently opened files list
numberOfRecentFiles = 10

# Name of the file where the recently opened file list will be stored
recentFilesStorage = recent.json

# Load the last viewed comic on startup
openLastViewedOnStartup = true

# Name of the file where the last viewed comic filepath will be stored
lastViewedFileStorage = last-viewed.txt

# Continue reading from the last viewed page
rememberPage = true

# Name of the file to store last viewed page data
pageStorageFile = pages.json

###########
#BOOKMARKS#
###########

# Name of the file where bookmarks will be stored
bookmarksFileName = default-bookmarks.json

###################
#EXTERNAL PROGRAMS#
###################

# Programs to open Zip files, directories and individual images with.
# Each configuration key here has a comma separated list as value.
# The lists can contain several program entries.
# Each entry begins with a display name (that will be shown in the UI), prefixed by a colon
# This is followed by the name of the executable and the list of arguments, where
# %FILEPATH% gets replaced with the file path of the current archive/directory/image
openZipWith = :Ark, ark, %FILEPATH%
openDirectoryWith = :Dolphin, dolphin, %FILEPATH%
openImageWith = :KolourPaint, kolourpaint, %FILEPATH%, :Krita, krita, %FILEPATH%

############
#THUMBNAILS#
############

# Store cached thumbnails on disk
cacheThumbnailsOnDisk = true

# How many thumbnails to cache on disk
# Thumbs beyond this amount will be cleaned up on exit, so the number of cached thumbs
# might temporarily exceed this limit while the program is running
# Set to 0 to have no limit
diskThumbnailFileCacheLimit = 4096

# How many thumbnailer threads (at least 1 thread will always be created regardless of this value)
thumbnailerThreadCount = 3

showPageNumbersOnThumbnails = true
thumbPageNumFontSize = 12

# Background color of thumbnails
# See mainViewBackground
#thumbBackground = dynamic
thumbBackground = #545454

# Dimensions of a single thumbnail cell
thumbnailWidth = 100
thumbnailHeight = 142

# The space between thumbnail cells, in pixels
thumbnailSpacing = 2

# Whether to draw a border on thumbnail images
thumbnailBorder = true

# Thumbnail border color
thumbnailBorderColor = #000000

# Use high quality interpolation when creating thumbnails
# Slower, but gives better looking results.
# If you change this, thumbnails that were already cached to disk won't be redone,
# so if you want it to apply everywhere, delete the thumbnail cache manually
thumbHQScaling = true

#############
#PERFORMANCE#
#############

# How many thumbnails to keep cached in memory
thumbnailCacheLimit = 4096

# Main image cache limit
# How many images to keep in the main image cache (in memory)
mainImageCacheLimit = 15

# Enable the nearby page preloader thread which will attempt
# to preload pages before/after the current one into the main image cache
# See also the next option
enableNearbyPagePreloader = true

# This many pages will be preloaded by the nearby page preloader
# on both sides of the current page (also including the current page)
# Make sure the main image cache is large enough to hold 2 times + 1 this many
# images with some space left
preloadedPageCount = 3

###########
#SHORTCUTS#
###########

# You can override the default shortcuts here.
# Just uncomment the line you want and write the key (combination) there,
# e.g.
# shortcutExample = Ctrl+A
# shortcutAnotherExample = F11

# shortcutOpen =
# shortcutRecent =
# shortcutReload =
# shortcutMinimize =
# shortcutQuit =
# shortcutFullscreen =
# shortcutDouble_page_mode =
# shortcutManga_mode =
# shortcutBest_fit_mode =
# shortcutFit_width_mode =
# shortcutFit_height_mode =
# shortcutFit_original_size_mode =
# shortcutManual_zoom_mode =
# shortcutSlideshow =
# shortcutMagnifying_lens =
# shortcutZoom_in =
# shortcutZoom_out =
# shortcutReset_zoom =
# shortcutNext_page =
# shortcutPrevious_page =
# shortcutGo_to_page =
# shortcutFirst_page =
# shortcutLast_page =
# shortcutNext_comic =
# shortcutPrevious_comic =
# shortcutShow_menu =
# shortcutShow_main_toolbar =
# shortcutShow_statusbar =
# shortcutAdd_bookmark =
# shortcutAbout_QComix =
# shortcutAbout_Qt =
# shortcutClose_comic =
# shortcutRotate_clockwise =
# shortcutRotate_counterclockwise =
# shortcutFlip_horizontally =
# shortcutFlip_vertically =
# shortcutKeep_transformation =
# shortcutCopy_image_to_clipboard =
# shortcutCopy_image_file_to_clipboard =
# shortcutRotate_180_degrees =
# shortcutShow_scrollbars =
# shortcutShow_side_panels =
# shortcutHide_all =
# shortcutOpen_with =
# shortcutOpen_image_with =
# shortcutStretch_small_images =
# shortcutSmart_scroll_vertical_first =
# shortcutOpen_directory =
# shortcutSet_slideshow_interval =
# shortcutFit_to_fixed_size_mode =
# shortcutSmart_scroll =
# shortcutAllow_free_drag =
# shortcutHydrus_search_query =

####################
#HYDRUS INTEGRATION#
####################

# This is all experimental.
# If enabled and configured, it is able to run queries through the Hydrus API
# and display the files, however it does NOT stream the files over the API so it
# will only work with locally accessible Hydrus databases.
# Also note that the Hydrus search API is very limited, only results for the
# exact tag as typed will be returned (no wildcards, etc.) which makes this
# somewhat useless

enableHydrusIntegration = false
hydrusAPIURL = http://address:port
hydrusAPIKey = your_api_key_here

# Comma separated list of your file locations
hydrusClientFilesLocations = /your/hydrus/db/client_files/

# Sort results by this namespace
hydrusResultsSortNamespace = page
